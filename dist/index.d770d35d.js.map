{"mappings":"AAAA,EAAE;AACF,sEAAsE;AACtE,0CAA0C;AAC1C,EAAE;AAEF,MAAM,IAAI,GAAG;IACX,aAAa,EAAE,CAAC,CAAC,GAAK;QACpB,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAI,CAAA,CAAC,GAAG,GAAG,CAAA,AAAC,CAAC,CAAC;KACvD;IACD,cAAc,EAAE,CAAC,CAAC,GAAK;QACrB,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,GAAK,GAAG,CAAC,CAAC,CAAC;KACtD;IACD,gBAAgB,EAAE,CAAC,CAAC,GAAK;QACvB,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,GAAG,GACvB,CAAC,GACD,CAAC,GAAG,GAAG,GACP,GAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GACrC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;KACjD;IACD,OAAO,EAAE,CAAC,CAAC,GAAK;QACd,MAAM,OAAO,GAAG,kBAAkB,AAAC;QACnC,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC;KAC9B;IACD,aAAa,EAAE,CAAC,CAAC,GAAK;QACpB,OAAO,CAAC,GAAG,GAAG,GACV,GAAG,GAAI,CAAA,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAA,AAAC,GAC1C,GAAG,GAAI,CAAA,IAAI,CAAC,IAAI,CAAC,AAAC,CAAA,GAAG,GAAG,GAAG,GAAG,CAAC,CAAA,GAAK,CAAA,GAAG,GAAG,CAAC,GAAG,GAAG,CAAA,AAAC,CAAC,GAAG,GAAG,CAAA,AAAC,CAAC;KAChE;IACD,OAAO,EAAE,CAAC,CAAC,GAAK;QACd,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;KAClB;IACD,QAAQ,EAAE,CAAC,CAAC,GAAK;QACf,MAAM,CAAC,GAAG,CAAC,GAAG,GAAG,AAAC;QAClB,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;KACxB;IACD,UAAU,EAAE,CAAC,CAAC,GAAK;QACjB,OAAO,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,GAAG,GAAG,CAAC;KAC7E;IACD,YAAY,EAAE,CAAC,CAAC,GAAK;QACnB,OAAO,CAAC,CAAC,GAAI,CAAA,CAAC,GAAG,GAAG,CAAA,AAAC,CAAC;KACvB;IACD,UAAU,EAAE,CAAC,CAAC,GAAK;QACjB,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,GAAI,CAAA,GAAG,GAAG,CAAC,CAAA,GAAI,GAAG,CAAC;KACjD;CACF,AAAC","sources":["src/js/easings.js"],"sourcesContent":["//\r\n// these easing functions are based on the code of glsl-easing module.\r\n// https://github.com/glslify/glsl-easings\r\n//\r\n\r\nconst ease = {\r\n  exponentialIn: (t) => {\r\n    return t == 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\r\n  },\r\n  exponentialOut: (t) => {\r\n    return t == 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\r\n  },\r\n  exponentialInOut: (t) => {\r\n    return t == 0.0 || t == 1.0\r\n      ? t\r\n      : t < 0.5\r\n      ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\r\n      : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\r\n  },\r\n  sineOut: (t) => {\r\n    const HALF_PI = 1.5707963267948966;\r\n    return Math.sin(t * HALF_PI);\r\n  },\r\n  circularInOut: (t) => {\r\n    return t < 0.5\r\n      ? 0.5 * (1.0 - Math.sqrt(1.0 - 4.0 * t * t))\r\n      : 0.5 * (Math.sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);\r\n  },\r\n  cubicIn: (t) => {\r\n    return t * t * t;\r\n  },\r\n  cubicOut: (t) => {\r\n    const f = t - 1.0;\r\n    return f * f * f + 1.0;\r\n  },\r\n  cubicInOut: (t) => {\r\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\r\n  },\r\n  quadraticOut: (t) => {\r\n    return -t * (t - 2.0);\r\n  },\r\n  quarticOut: (t) => {\r\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\r\n  },\r\n};\r\n"],"names":[],"version":3,"file":"index.d770d35d.js.map","sourceRoot":"/__parcel_source_root/"}